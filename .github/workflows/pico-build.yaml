#
#  Copyright 2022 Paul Guyot <pguyot@kallisys.net>
#
#  SPDX-License-Identifier: Apache-2.0 OR LGPL-2.1-or-later
#

name: Pico Build

on:
  push:
    paths:
      - '.github/workflows/pico-build.yaml'
      - 'CMakeLists.txt'
      - 'libs/**'
      - 'src/platforms/rp2040/**'
      - 'src/platforms/esp32/test/main/test_erl_sources/test_crypto.erl'
      - 'src/libAtomVM/**'
  pull_request:
    paths:
      - '.github/workflows/pico-build.yaml'
      - 'CMakeLists.txt'
      - 'libs/**'
      - 'src/platforms/rp2040/**'
      - 'src/platforms/esp32/test/main/test_erl_sources/test_crypto.erl'
      - 'src/libAtomVM/**'

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref != 'refs/heads/main' && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  pico:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        board: ["pico"]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: "apt update"
      run: sudo apt update

    - name: "Install deps"
      run: sudo apt install -y cmake gperf ninja-build gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib erlang-base erlang-dialyzer rebar3

    - name: Build
      shell: bash
      working-directory: ./src/platforms/rp2040/
      run: |
        set -euo pipefail
        mkdir build
        cd build
        cmake .. -G Ninja -DPICO_BOARD=${{ matrix.board }}
        ninja

    - name: Install nvm and nodejs 20
      run: |
        set -euo pipefail
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash
        source $HOME/.nvm/nvm.sh
        nvm install 20

    - name: Build tests (without SMP)
      shell: bash
      working-directory: ./src/platforms/rp2040/
      run: |
        set -euo pipefail
        mkdir build.nosmp
        cd build.nosmp
        # TODO: fix all warnings and enable -DAVM_WARNINGS_ARE_ERRORS=ON
        cmake .. -G Ninja -DPICO_BOARD=${{ matrix.board }} -DAVM_DISABLE_SMP=1
        cmake --build . --target=rp2040_tests

    - name: Run tests with rp2040js
      shell: bash
      working-directory: ./src/platforms/rp2040/tests
      run: |
        set -euo pipefail
        source $HOME/.nvm/nvm.sh
        nvm use node
        npm install
        npx tsx run-tests.ts ../build.nosmp/tests/rp2040_tests.uf2 ../build.nosmp/tests/test_erl_sources/rp2040_test_modules.uf2

    - name: Build atomvmlib.uf2
      shell: bash
      run: |
        set -euo pipefail
        mkdir build
        cd build
        cmake ..
        make atomvmlib.uf2

    - name: Install uf2tool
      shell: bash
      run: |
        mkdir -p /tmp/uf2tool_install && cd /tmp/uf2tool_install
        echo '{deps, [{uf2tool, "1.1.0"}]}.' > rebar.config
        rebar3 get-deps
        TOOL_PATH=$(find _build -name "uf2tool" -type f -executable | head -1)
        if [ -n "$TOOL_PATH" ]; then
          sudo cp "$TOOL_PATH" /usr/local/bin/
        else
          # If executable not found, try building it
          echo '{escript_main_app, uf2tool}.' >> rebar.config
          rebar3 escriptize
          sudo cp _build/default/bin/uf2tool /usr/local/bin/ || echo "Failed to build uf2tool"
        fi
        which uf2tool || echo "uf2tool not found in PATH"

    - name: Rename and write sha256sum
      shell: bash
      run: |
        pushd src/platforms/rp2040/build
        ATOMVM_UF2=AtomVM-${{ matrix.board }}-${{ github.ref_name }}.uf2
        mv src/AtomVM.uf2 "src/${ATOMVM_UF2}"
        sha256sum "src/${ATOMVM_UF2}" > "src/${ATOMVM_UF2}.sha256"
        popd
        pushd build/libs
        ATOMVMLIB_FILE=atomvmlib-${{ github.ref_name }}.uf2
        mv atomvmlib.uf2 "${ATOMVMLIB_FILE}"
        sha256sum "${ATOMVMLIB_FILE}" > "${ATOMVMLIB_FILE}.sha256"
        COMBINED_ATOMVM_UF2=AtomVM-combined-${{ matrix.board }}-${{ github.ref_name }}.uf2
        uf2tool join -o "${COMBINED_ATOMVM_UF2}" "src/${ATOMVM_UF2}" "${ATOMVMLIB_FILE}"
        sha256sum "${COMBINED_ATOMVM_UF2}" > "${COMBINED_ATOMVM_UF2}.sha256"
        popd

    - name: "Upload ${{ matrix.board }} artifacts"
      uses: actions/upload-artifact@v4
      with:
        name: AtomVM-combined-${{ matrix.board }}-${{ github.ref_name }}.uf2
        path: ./src/src/platforms/rp2040/build/AtomVM-combined-${{ matrix.board }}-${{ github.ref_name }}.uf2
        if-no-files-found: error

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        draft: true
        fail_on_unmatched_files: true
        files: |
          src/platforms/rp2040/build/src/AtomVM-${{ matrix.board }}-${{ github.ref_name }}.uf2
          src/platforms/rp2040/build/src/AtomVM-${{ matrix.board }}-${{ github.ref_name }}.uf2.sha256
          build/libs/atomvmlib-${{ github.ref_name }}.uf2
          build/libs/atomvmlib-${{ github.ref_name }}.uf2.sha256
